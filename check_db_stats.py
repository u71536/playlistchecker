#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PlaylistChecker
"""

import os
import sys
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å Python
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—É—Ç–∏
from app import app, db, User, Playlist, Track, Notification, SpotifyToken, DeezerToken, AppleMusicToken, YandexMusicToken

def show_database_stats():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    with app.app_context():
        print("=" * 50)
        print("–°–¢–ê–¢–ò–°–¢–ò–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• PLAYLISTCHECKER")
        print("=" * 50)
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        users_count = User.query.count()
        telegram_connected = User.query.filter(User.telegram_chat_id.isnot(None)).count()
        telegram_enabled = User.query.filter_by(telegram_notifications_enabled=True).count()
        
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        print(f"   üì± Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω: {telegram_connected}")
        print(f"   üîî Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã: {telegram_enabled}")
        
        if users_count > 0:
            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            recent_users = User.query.order_by(User.created_at.desc()).limit(5).all()
            for user in recent_users:
                tg_status = "üì±" if user.telegram_chat_id else "‚ùå"
                print(f"   - {user.username} ({user.email}) {tg_status} - {user.created_at.strftime('%Y-%m-%d %H:%M')}")
        
        print()
        
        # –ü–ª–µ–π–ª–∏—Å—Ç—ã
        playlists_count = Playlist.query.count()
        print(f"üéµ –ü–ª–µ–π–ª–∏—Å—Ç–æ–≤: {playlists_count}")
        
        if playlists_count > 0:
            # –ü–æ —Å–µ—Ä–≤–∏—Å–∞–º
            spotify_playlists = Playlist.query.filter_by(service='spotify').count()
            deezer_playlists = Playlist.query.filter_by(service='deezer').count()
            apple_playlists = Playlist.query.filter_by(service='apple_music').count()
            yandex_playlists = Playlist.query.filter_by(service='yandex_music').count()
            
            print(f"   - Spotify: {spotify_playlists}")
            print(f"   - Deezer: {deezer_playlists}")
            print(f"   - Apple Music: {apple_playlists}")
            print(f"   - Yandex Music: {yandex_playlists}")
            
            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã:")
            recent_playlists = Playlist.query.order_by(Playlist.created_at.desc()).limit(5).all()
            for playlist in recent_playlists:
                print(f"   - {playlist.name} ({playlist.service}) - {playlist.created_at.strftime('%Y-%m-%d %H:%M')}")
        
        print()
        
        # –¢—Ä–µ–∫–∏
        tracks_count = Track.query.count()
        active_tracks = Track.query.filter_by(is_removed=False).count()
        removed_tracks = Track.query.filter_by(is_removed=True).count()
        
        print(f"üé∂ –¢—Ä–µ–∫–æ–≤: {tracks_count}")
        print(f"   - –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_tracks}")
        print(f"   - –£–¥–∞–ª–µ–Ω–Ω—ã—Ö: {removed_tracks}")
        
        if tracks_count > 0:
            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–µ–∫–∏:")
            recent_tracks = Track.query.order_by(Track.added_at.desc()).limit(5).all()
            for track in recent_tracks:
                status = "‚ùå" if track.is_removed else "‚úÖ"
                print(f"   {status} {track.name} - {track.artist} ({track.added_at.strftime('%Y-%m-%d %H:%M')})")
        
        print()
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        notifications_count = Notification.query.count()
        unread_notifications = Notification.query.filter_by(is_read=False).count()
        
        print(f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notifications_count}")
        print(f"   - –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {unread_notifications}")
        
        if notifications_count > 0:
            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:")
            recent_notifications = Notification.query.order_by(Notification.created_at.desc()).limit(5).all()
            for notif in recent_notifications:
                status = "üî¥" if not notif.is_read else "üü¢"
                print(f"   {status} {notif.message[:50]}... ({notif.created_at.strftime('%Y-%m-%d %H:%M')})")
        
        print()
        
        # –¢–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞
        spotify_tokens = SpotifyToken.query.count()
        deezer_tokens = DeezerToken.query.count()
        apple_tokens = AppleMusicToken.query.count()
        yandex_tokens = YandexMusicToken.query.count()
        
        print(f"üîë –¢–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞:")
        print(f"   - Spotify: {spotify_tokens}")
        print(f"   - Deezer: {deezer_tokens}")
        print(f"   - Apple Music: {apple_tokens}")
        print(f"   - Yandex Music: {yandex_tokens}")
        
        print()
        print("=" * 50)

def show_user_details(user_id=None):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
    with app.app_context():
        if user_id:
            user = User.query.get(user_id)
            if not user:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                return
            users = [user]
        else:
            users = User.query.all()
        
        for user in users:
            print(f"\nüë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨: {user.username} (ID: {user.id})")
            print(f"   Email: {user.email}")
            print(f"   –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {user.created_at.strftime('%Y-%m-%d %H:%M')}")
            
            # Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
            print(f"   üì± Telegram:")
            if user.telegram_chat_id:
                print(f"      Chat ID: {user.telegram_chat_id}")
                print(f"      Username: {user.telegram_username or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
                print(f"      –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {'‚úÖ –í–∫–ª—é—á–µ–Ω—ã' if user.telegram_notifications_enabled else '‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã'}")
            else:
                print(f"      ‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
            print(f"   üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:")
            print(f"      Email: {'‚úÖ' if user.email_notifications_enabled else '‚ùå'}")
            print(f"      Telegram: {'‚úÖ' if user.telegram_notifications_enabled else '‚ùå'}")
            print(f"      –ë—Ä–∞—É–∑–µ—Ä: {'‚úÖ' if user.browser_notifications_enabled else '‚ùå'}")
            
            # –ü–ª–µ–π–ª–∏—Å—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            playlists = Playlist.query.filter_by(user_id=user.id).all()
            print(f"   –ü–ª–µ–π–ª–∏—Å—Ç–æ–≤: {len(playlists)}")
            
            for playlist in playlists:
                tracks_count = Track.query.filter_by(playlist_id=playlist.id).count()
                active_tracks = Track.query.filter_by(playlist_id=playlist.id, is_removed=False).count()
                print(f"     - {playlist.name} ({playlist.service}) - {active_tracks}/{tracks_count} —Ç—Ä–µ–∫–æ–≤")
            
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            notifications = Notification.query.filter_by(user_id=user.id).all()
            unread = Notification.query.filter_by(user_id=user.id, is_read=False).count()
            print(f"   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(notifications)} (–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {unread})")
            
            print("-" * 40)

if __name__ == '__main__':
    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    print("2. –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("3. –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    
    choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
    
    if choice == '1':
        show_database_stats()
    elif choice == '2':
        show_user_details()
    elif choice == '3':
        user_id = input("–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
        try:
            show_user_details(int(user_id))
        except ValueError:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    else:
        print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
