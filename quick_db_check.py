#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
"""

import sqlite3
import os
from datetime import datetime

def check_db_quick():
    """–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ SQLite"""
    db_path = os.path.join('instance', 'playlistchecker.db')
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("=" * 50)
        print("–ë–´–°–¢–†–ê–Ø –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
        print("=" * 50)
        
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        cursor.execute("SELECT COUNT(*) FROM user")
        users_count = cursor.fetchone()[0]
        print(f"üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
        
        if users_count > 0:
            cursor.execute("SELECT username, email, created_at FROM user ORDER BY created_at DESC LIMIT 5")
            users = cursor.fetchall()
            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            for user in users:
                print(f"   - {user[0]} ({user[1]}) - {user[2]}")
        
        print()
        
        # –ü–ª–µ–π–ª–∏—Å—Ç—ã
        cursor.execute("SELECT COUNT(*) FROM playlist")
        playlists_count = cursor.fetchone()[0]
        print(f"üéµ –ü–ª–µ–π–ª–∏—Å—Ç–æ–≤: {playlists_count}")
        
        if playlists_count > 0:
            # –ü–æ —Å–µ—Ä–≤–∏—Å–∞–º
            cursor.execute("SELECT service, COUNT(*) FROM playlist GROUP BY service")
            services = cursor.fetchall()
            for service, count in services:
                print(f"   - {service}: {count}")
            
            cursor.execute("SELECT name, service, created_at FROM playlist ORDER BY created_at DESC LIMIT 5")
            playlists = cursor.fetchall()
            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–ª–µ–π–ª–∏—Å—Ç—ã:")
            for playlist in playlists:
                print(f"   - {playlist[0]} ({playlist[1]}) - {playlist[2]}")
        
        print()
        
        # –¢—Ä–µ–∫–∏
        cursor.execute("SELECT COUNT(*) FROM track")
        tracks_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM track WHERE is_removed = 0")
        active_tracks = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM track WHERE is_removed = 1")
        removed_tracks = cursor.fetchone()[0]
        
        print(f"üé∂ –¢—Ä–µ–∫–æ–≤: {tracks_count}")
        print(f"   - –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active_tracks}")
        print(f"   - –£–¥–∞–ª–µ–Ω–Ω—ã—Ö: {removed_tracks}")
        
        if tracks_count > 0:
            cursor.execute("SELECT name, artist, added_at, is_removed FROM track ORDER BY added_at DESC LIMIT 5")
            tracks = cursor.fetchall()
            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–µ–∫–∏:")
            for track in tracks:
                status = "‚ùå" if track[3] else "‚úÖ"
                print(f"   {status} {track[0]} - {track[1]} ({track[2]})")
        
        print()
        
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        cursor.execute("SELECT COUNT(*) FROM notification")
        notifications_count = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM notification WHERE is_read = 0")
        unread_notifications = cursor.fetchone()[0]
        
        print(f"üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {notifications_count}")
        print(f"   - –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö: {unread_notifications}")
        
        if notifications_count > 0:
            cursor.execute("SELECT message, created_at, is_read FROM notification ORDER BY created_at DESC LIMIT 5")
            notifications = cursor.fetchall()
            print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:")
            for notif in notifications:
                status = "üî¥" if not notif[2] else "üü¢"
                print(f"   {status} {notif[0][:50]}... ({notif[1]})")
        
        print()
        
        # –¢–æ–∫–µ–Ω—ã
        cursor.execute("SELECT COUNT(*) FROM spotify_token")
        spotify_tokens = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM deezer_token")
        deezer_tokens = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM apple_music_token")
        apple_tokens = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM yandex_music_token")
        yandex_tokens = cursor.fetchone()[0]
        
        print(f"üîë –¢–æ–∫–µ–Ω—ã –¥–æ—Å—Ç—É–ø–∞:")
        print(f"   - Spotify: {spotify_tokens}")
        print(f"   - Deezer: {deezer_tokens}")
        print(f"   - Apple Music: {apple_tokens}")
        print(f"   - Yandex Music: {yandex_tokens}")
        
        print()
        print("=" * 50)
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == '__main__':
    check_db_quick()
