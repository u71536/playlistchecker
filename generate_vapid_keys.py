#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VAPID –∫–ª—é—á–µ–π –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
–ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π –∏ –¥–æ–±–∞–≤—å—Ç–µ –∏—Ö –≤ .env —Ñ–∞–π–ª.
"""

try:
    from pywebpush import webpush
    import base64
    from cryptography.hazmat.primitives import serialization
    from cryptography.hazmat.primitives.asymmetric import ec
    from cryptography.hazmat.backends import default_backend
except ImportError as e:
    print("–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:")
    print("pip install pywebpush cryptography")
    exit(1)


def generate_vapid_keys():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–∞—Ä—É VAPID –∫–ª—é—á–µ–π"""
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
    private_key = ec.generate_private_key(ec.SECP256R1(), default_backend())
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á
    public_key = private_key.public_key()
    
    # –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
    private_key_bytes = private_key.private_bytes(
        encoding=serialization.Encoding.PEM,
        format=serialization.PrivateFormat.PKCS8,
        encryption_algorithm=serialization.NoEncryption()
    )
    
    # –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –≤ –Ω–µ—Å–∂–∞—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
    public_key_bytes = public_key.public_bytes(
        encoding=serialization.Encoding.X962,
        format=serialization.PublicFormat.UncompressedPoint
    )
    
    # –ö–æ–¥–∏—Ä—É–µ–º –≤ base64 URL-safe —Ñ–æ—Ä–º–∞—Ç
    private_key_b64 = base64.urlsafe_b64encode(private_key_bytes).decode('utf-8').rstrip('=')
    public_key_b64 = base64.urlsafe_b64encode(public_key_bytes).decode('utf-8').rstrip('=')
    
    return private_key_b64, public_key_b64


def main():
    print("üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è VAPID –∫–ª—é—á–µ–π –¥–ª—è PlaylistChecker...")
    print()
    
    try:
        private_key, public_key = generate_vapid_keys()
        
        print("‚úÖ VAPID –∫–ª—é—á–∏ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
        print()
        print("üìã –î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –≤–∞—à .env —Ñ–∞–π–ª:")
        print("=" * 60)
        print(f"VAPID_PUBLIC_KEY={public_key}")
        print(f"VAPID_PRIVATE_KEY={private_key}")
        print("VAPID_EMAIL=mailto:your_email@example.com")
        print("=" * 60)
        print()
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û:")
        print("1. –ó–∞–º–µ–Ω–∏—Ç–µ 'your_email@example.com' –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π email")
        print("2. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –∫–ª—é—á–∏ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º –º–µ—Å—Ç–µ")
        print("3. –ù–µ –ø—É–±–ª–∏–∫—É–π—Ç–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –≤ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è—Ö")
        print("4. –ü—É–±–ª–∏—á–Ω—ã–π –∫–ª—é—á –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
        print("5. –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π: {e}")
        return 1
    
    return 0


if __name__ == "__main__":
    exit(main())
